{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://dfitaxhistory-project/./src/configdata.ts","webpack://dfitaxhistory-project/./src/historydata.ts","webpack://dfitaxhistory-project/./src/index.ts","webpack://dfitaxhistory-project/webpack/bootstrap","webpack://dfitaxhistory-project/webpack/runtime/global","webpack://dfitaxhistory-project/webpack/startup"],"sourcesContent":["/**\r\n * Interface representing an address object.\r\n */\r\ninterface Address {\r\n  value: string; // The actual address value as a string.\r\n  label: string | null; // An optional label for the address.\r\n  enabled: boolean; // Indicates whether the address is enabled or not.\r\n}\r\n\r\n/**\r\n * Interface representing the configuration data object.\r\n */\r\ninterface ConfigData {\r\n  cur_code: string; // The current currency code.\r\n  locale: string; // The current locale for the application.\r\n  addresses: Address[]; // An array of address objects.\r\n}\r\n\r\n/**\r\n * Holds the configuration data or null if not yet fetched.\r\n */\r\nexport var config: ConfigData | undefined;\r\n\r\n/**\r\n * Stores the URL of the last fetched configuration.\r\n */\r\nvar lastconfigurl: string;\r\n\r\n/**\r\n * Fetches the configuration data from the given URL.\r\n * If the configuration data is already fetched or the provided URL\r\n * is the same as the last fetched URL, it returns the existing config data.\r\n *\r\n * @param {string} configUrl - The URL to fetch the configuration data from.\r\n * @returns {Promise<string | ConfigData>} A promise that resolves to a config data object\r\n * or an error message string in case of an error.\r\n */\r\nexport async function fetchConfigData(configUrl: string): Promise<string | ConfigData> {\r\n  if (config && lastconfigurl === configUrl) {\r\n    return config;\r\n  } else {\r\n    try {\r\n      config = undefined;\r\n      const response = await fetch(configUrl);\r\n      if (!response.ok)\r\n        return `HTTP error fetching: ${configUrl} status: ${response.status}`\r\n      config = await response.json() as ConfigData;\r\n      lastconfigurl = configUrl; // Update the last fetched URL\r\n      return config;\r\n    } catch (error) {\r\n      return \"An error occurred while fetching the config data:\" + error;\r\n    }\r\n  }\r\n}","import {config} from './configdata'\r\n\r\n/**\r\n * The schema definition for the history item model.\r\n */\r\nexport const historyItemSchema = {\r\n  model: {\r\n    fields: {\r\n      dt: { type: \"date\" },\r\n      debit1Code: { type: \"string\" },\r\n      debit1Qty: { type: \"number\" },\r\n      debit1Value: { type: \"number\" },\r\n      debit2Code: { type: \"string\" },\r\n      debit2Qty: { type: \"number\" },\r\n      debit2Value: { type: \"number\" },\r\n      credit1Code: { type: \"string\" },\r\n      credit1Qty: { type: \"number\" },\r\n      credit1Value: { type: \"number\" },\r\n      credit2Code: { type: \"string\" },\r\n      credit2Qty: { type: \"number\" },\r\n      credit2Value: { type: \"number\" },\r\n      adr1: { type: \"string\" },\r\n      adr2: { type: \"string\" },\r\n      cat: { type: \"string\" },\r\n      tx_id: { type: \"string\" },\r\n      blkid: { type: \"number\" },\r\n      value: { type: \"number\" },\r\n      fee_qty: { type: \"number\" },\r\n      fee_value: { type: \"number\" },\r\n    },\r\n  }\r\n}\r\n\r\n\r\n\r\n// function in templates must be in global scope\r\nconst _global = (window /* browser */ || global /* node */) as any\r\n_global.currencyCode = () =>  config?.cur_code ?? \"\"\r\n\r\n/**\r\n * Returns an array of columns for the history table.\r\n * \r\n * @param {number[]} columnWidths - Optional array of column widths.\r\n * @returns {kendo.ui.GridColumn[]} An array of Kendo UI GridColumn objects.\r\n */\r\nexport function historyColumns(columnWidths: number[] = []): kendo.ui.GridColumn[] {\r\n  return [\r\n    { field: 'dt', title: 'Date', width: columnWidths[0] || 120, format: \"{0:dd.MM.yy HH:mm:ss}\" },\r\n    { field: 'blk_id', title: 'Block', width: columnWidths[1] || 70, template: '<a href=\"https://defiscan.live/blocks/${blk_id}\" target=\"_blank\">${blk_id}</a>' },\r\n    { field: 'adr1', title: \"Addr1\", width:columnWidths[2] || 70, filterable: { multi: true, search: true }, template: '<a href=\"https://defiscan.live/address/${adr1}\" target=\"_blank\">${adr1}</a>'},\r\n    { field: 'adr2', title: \"Addr2\", width:columnWidths[3] || 70, filterable: { multi: true, search: true }, template: '<a href=\"https://defiscan.live/address/${adr2}\" target=\"_blank\">${adr2}</a>'},\r\n    { field: 'tx_id', title: \"tx\", width: columnWidths[4] || 50, template: '<a href=\"https://defiscan.live/transactions/${tx_id}\" target=\"_blank\">${tx_id}</a>' },\r\n    { field: 'cat', title: \"Category\", width: columnWidths[5] || 100, filterable: { multi: true } },\r\n    { field: 'debit1Qty', title: 'D1.Qty', width: columnWidths[6] || 85, format: \"{0:n}\" },\r\n    { field: 'debit1Code', title: 'D1.Code', width: columnWidths[7] || 85, filterable: { multi: true } },\r\n    { field: 'debit2Qty', title: 'D2.Qty', width: columnWidths[8] || 85, format: \"{0:n}\" },\r\n    { field: 'debit2Code', title: 'D2.Code', width: columnWidths[9] || 85, filterable: { multi: true } },\r\n    { field: 'credit1Qty', title: 'C1.Qty', width: columnWidths[10] || 85, format: \"{0:n}\" },\r\n    { field: 'credit1Code', title: 'C1.Code', width: columnWidths[11] || 85, filterable: { multi: true } },\r\n    { field: 'credit2Qty', title: 'C2.Qty', width: columnWidths[12] || 85, format: \"{0:n}\" },\r\n    { field: 'credit2Code', title: 'C2.Code', width: columnWidths[13] || 85, filterable: { multi: true } },\r\n    { field: 'value', width: columnWidths[14] || 100, format: \"{0:n}\", aggregates: [\"sum\"], footerTemplate: '∑ #=kendo.toString(sum,\"n2\") + \" \" + currencyCode() #'},\r\n    { field: 'fee_qty', width: columnWidths[15] || 80 , format: \"{0:#.########}\"},\r\n    { field: 'fee_value' , format: \"{0:#.########}\"},\r\n  ]\r\n}\r\n\r\n/**\r\n * Returns a tooltip text for a given table column.\r\n * \r\n * @param {any} e - Event data.\r\n * @returns {string} Tooltip text.\r\n */\r\nexport function historyTooltip(e: any) {\r\n  var text = e.target.text().trim(); // element for which the tooltip is shown\r\n  switch (text) {\r\n    case \"Addr1\": return \"Address\";\r\n    case \"Addr2\": return \"Address 2\";\r\n    case \"D1.Qty\": return \"Debit 1 Quantity\";\r\n    case \"D1.Qty\": return \"Debit 1 Quantity\";\r\n    case \"D1.Code\": return \"Debit 1 Token Code\";\r\n    case \"D1.Value\": return \"Debit 1 Value\";\r\n    case \"D2.Qty\": return \"Debit 2 Quantity\";\r\n    case \"D2.Code\": return \"Debit 2 Token Code\";\r\n    case \"D2.Value\": return \"Debit 2 Value\";\r\n    case \"C1.Qty\": return \"Credit 1 Quantity\";\r\n    case \"C1.Code\": return \"Credit 1 Token Code\";\r\n    case \"C1.Value\": return \"Credit 1 Value\";\r\n    case \"C2.Qty\": return \"Credit 2 Quantity\";\r\n    case \"C2.Code\": return \"Credit 2 Token Code\";\r\n    case \"C2.Value\": return \"Credit 2 Value\";\r\n    case \"value\": return \"value in \" + config?.cur_code;\r\n    case \"fee_value\": return \"fee in \" + config?.cur_code;\r\n    default:\r\n      return text;\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches history data from the given API URL.\r\n * \r\n * @param {string} apiUrl - The URL to fetch the history data from.\r\n * @returns {Promise<string | HistoryItem[]>} A promise that resolves to an array of history items\r\n * or an error message string in case of an error.\r\n */\r\nexport async function fetchHistoryData(apiUrl: string) {\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    if (!response.ok) \r\n      return `HTTP error fetching: ${apiUrl} status: ${response.status}`\r\n    const data = await response.json();\r\n    return data.history.map(historyData);\r\n  } catch (error) {\r\n      return \"An error occurred while fetching the data:\" + error;\r\n  }\r\n}\r\n\r\n/**\r\n * Interface for a token object.\r\n */\r\ninterface Token {\r\n  code: string;\r\n  qty: number;\r\n  value?: number;\r\n}\r\n\r\n/**\r\n * Interface for a processed history item used in the application.\r\n */\r\ninterface HistoryApiItem {\r\n  dt: string;\r\n  adr: string;\r\n  cat: string;\r\n  tx_id: string;\r\n  blk_id: number;\r\n  value: number;\r\n  fee_qty: number;\r\n  fee_value: number;\r\n  tokens: Token[];\r\n}\r\n\r\n/**\r\n * Interface for a processed history item used in the application.\r\n */\r\ninterface HistoryItem {\r\n  dt: Date;\r\n  adr1: string;\r\n  adr2: string;\r\n  cat: string;\r\n  tx_id: string;\r\n  blk_id: number;\r\n  value: number;\r\n  fee_qty: number;\r\n  fee_value: number;\r\n  debit1Code?: string;\r\n  debit1Qty?: number;\r\n  debit1Value?: number;\r\n  debit2Code?: string;\r\n  debit2Qty?: number;\r\n  debit2Value?: number;\r\n  credit1Code?: string;\r\n  credit1Qty?: number;\r\n  credit1Value?: number;\r\n  credit2Code?: string;\r\n  credit2Qty?: number;\r\n  credit2Value?: number;\r\n}\r\n\r\n/**\r\n * Processes a raw history item received from the API and returns\r\n * a history item object used in the application.\r\n * \r\n * @param {HistoryApiItem} item - A raw history item received from the API.\r\n * @returns {HistoryItem} A processed history item object.\r\n */\r\nfunction historyData(item: HistoryApiItem): HistoryItem {\r\n  const [a1, ...a2Arr] = item.adr.split(';');\r\n  const a2 = a2Arr.length > 0 ? a2Arr.join(';') : '';\r\n  const historyItem: HistoryItem = {\r\n    dt: new Date(item.dt),\r\n    adr1: a1,\r\n    adr2: a2,\r\n    cat: item.cat,\r\n    tx_id: item.tx_id,\r\n    blk_id: item.blk_id,\r\n    value: item.value,\r\n    fee_qty: item.fee_qty,\r\n    fee_value: item.fee_value,\r\n  };\r\n\r\n  let debitCount = 0;\r\n  let creditCount = 0;\r\n\r\n  item.tokens.forEach((token) => {\r\n    if (token.qty >= 0) {\r\n      debitCount++;\r\n      if (debitCount === 1) {\r\n        historyItem.debit1Code = token.code;\r\n        historyItem.debit1Qty = token.qty;\r\n        historyItem.debit1Value = token.value;\r\n      } else if (debitCount === 2) {\r\n        historyItem.debit2Code = token.code;\r\n        historyItem.debit2Qty = token.qty;\r\n        historyItem.debit2Value = token.value;\r\n      }\r\n    } else {\r\n      creditCount++;\r\n      if (creditCount === 1) {\r\n        historyItem.credit1Code = token.code;\r\n        historyItem.credit1Qty = token.qty;\r\n        historyItem.credit1Value = token.value;\r\n      } else if (creditCount === 2) {\r\n        historyItem.credit2Code = token.code;\r\n        historyItem.credit2Qty = token.qty;\r\n        historyItem.credit2Value = token.value;\r\n      }\r\n    }\r\n  });\r\n\r\n  return historyItem;\r\n}\r\n","/**\r\n * index.ts\r\n * Main application file responsible for setting up the grid and handling user interaction.\r\n */\r\n\r\n/// <reference path=\"kendo.all.d.ts\" />\r\nimport { fetchHistoryData, historyItemSchema, historyColumns, historyTooltip } from './historydata';\r\nimport { fetchConfigData } from './configdata'\r\n\r\nconst apiUrl = 'https://api.dfi.tax/v02/hst/';\r\nconst configUrl = 'https://api.dfi.tax/v02/cfg/get/';\r\n\r\nvar grid: kendo.ui.Grid;\r\nlet textboxAccessKey: kendo.ui.TextBox;\r\nlet yearTextbox: kendo.ui.NumericTextBox;\r\nlet monthTextbox: kendo.ui.NumericTextBox;\r\nvar historyData: any;\r\n\r\n/**\r\n* Get local storage value for a given key or return the default value if not found.\r\n* @param key - The key to search for in local storage.\r\n* @param defaulValue - The default value to return if the key is not found.\r\n* @returns The value found in local storage or the default value.\r\n*/\r\nfunction GetLocalStorage(key: string, defaulValue: any) {\r\n  const val = localStorage.getItem(key);\r\n  return val ? JSON.parse(val) : defaulValue;\r\n}\r\n\r\n/**\r\n * Initializes the application, setting up the grid and user interactions.\r\n */\r\nasync function init() {\r\n  const columnWidths = JSON.parse(localStorage.getItem(\"dfitaxhistory.colWidths\") || \"[]\");\r\n  grid = $(\"#grid\").kendoGrid({\r\n    toolbar: [\r\n      { template: \"<label>Access key:</label>\" },\r\n      { template: \"<input id='accessKey' />\" },\r\n      { template: \"<label>Year:</label>\" },\r\n      { template: \"<input id='yearTexbox' />\" },\r\n      { template: \"<label>Month:</label>\" },\r\n      { template: \"<input id='monthTexbox' />\" },\r\n      { template: \"<button id='btnLoad'>Load</button>\" },\r\n      \"excel\"\r\n    ],\r\n    dataSource: {\r\n      data: historyData,\r\n      schema: historyItemSchema,\r\n      aggregate: [\r\n        { field: \"value\", aggregate: \"sum\" },\r\n      ]\r\n    },\r\n    columns: historyColumns(columnWidths),\r\n    sortable: true,\r\n    resizable: true,\r\n    filterable: true,\r\n    filterMenuInit: function (e) {\r\n      if (e.field?.startsWith(\"adr\")) {\r\n        e.container?.addClass(\"widerMenu\");\r\n      }\r\n    },\r\n\r\n    // pageable: { pageSizes: [25, 50, 100, \"All\"] }\r\n    excel: {\r\n      fileName: \"dfitax_history.xlsx\",\r\n      filterable: true,\r\n      allPages: true\r\n    },\r\n    excelExport: function (e) {\r\n      var sheet = e.workbook!.sheets[0];\r\n      for (var rowIndex = 1; rowIndex < sheet.rows!.length; rowIndex++) {\r\n        var row = sheet.rows![rowIndex];\r\n        for (var cellIndex = 0; cellIndex < row.cells!.length; cellIndex++) {\r\n          //check if the cell value is of type date\r\n          if (row.cells![cellIndex].value instanceof Date) {\r\n            row.cells![cellIndex].format = \"dd.MM.yy hh:mm:ss\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    columnResize: function (e: kendo.ui.GridColumnResizeEvent) {\r\n      const columnWidths: number[] = [];\r\n      grid.columns.forEach((column: any) => { columnWidths.push(column.width); });\r\n      localStorage.setItem(\"dfitaxhistory.colWidths\", JSON.stringify(columnWidths));\r\n    },\r\n  }).data(\"kendoGrid\")!;\r\n  grid.thead.kendoTooltip({ filter: \"th\", content: historyTooltip });\r\n\r\n  textboxAccessKey = $(\"#accessKey\").kendoTextBox({\r\n    value: GetLocalStorage('accessKey', \"\"),\r\n  }).data(\"kendoTextBox\")!;\r\n\r\n  yearTextbox = $(\"#yearTexbox\").kendoNumericTextBox({\r\n    format: \"#\",\r\n    decimals: 0,\r\n    value: GetLocalStorage('dfitaxhistory.year', 2023),\r\n    min: 2019\r\n  }).data(\"kendoNumericTextBox\")!;\r\n\r\n  monthTextbox = $(\"#monthTexbox\").kendoNumericTextBox({\r\n    format: \"#\",\r\n    decimals: 0,\r\n    value: GetLocalStorage('dfitaxhistory.month', 0),\r\n    min: 0,\r\n    max: 12\r\n  }).data(\"kendoNumericTextBox\")!;\r\n\r\n  $(\"#btnLoad\").kendoButton({\r\n    icon: \"reload\",\r\n    click: async function () {\r\n      const accKey = textboxAccessKey.value().trim();\r\n      if (!accKey) {\r\n        alert(\"Access Key is empty!\");\r\n      } else {\r\n        const result = await fetchConfigData(`${configUrl}${accKey}`);\r\n        if (typeof result === \"string\") {\r\n          alert(result);\r\n        } else {\r\n          const year = yearTextbox.value();\r\n          const month = monthTextbox.value();\r\n          const url = `${apiUrl}${accKey}/${year}/${month}`;\r\n          historyData = await fetchHistoryData(url);\r\n          if (typeof historyData === \"string\") {\r\n            alert(historyData);\r\n          } else {\r\n            grid.dataSource.data(historyData); //assign new data without loosing schema, tooltip filter\r\n            localStorage.setItem('accessKey', JSON.stringify(accKey));\r\n            localStorage.setItem('dfitaxhistory.year', JSON.stringify(year));\r\n            localStorage.setItem('dfitaxhistory.month', JSON.stringify(month));\r\n            //we have new data: reinit the Multticheck Filter\r\n            $('.k-filterable').each((index, element) => $(element).data(\"kendoFilterMultiCheck\")?._init());\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n$(document).on(\"ready\", function () {\r\n  // Call init after DOM is loaded\r\n  init();\r\n\r\n  // Resize Grid on browser windows resize\r\n  $(window).on('resize', function () {\r\n    grid?.resize();\r\n  });\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["lastconfigurl","configUrl","config","undefined","fetch","response","ok","json","status","historyData","item","adr","split","a1","a2Arr","a2","length","join","historyItem","dt","Date","adr1","adr2","cat","tx_id","blk_id","value","fee_qty","fee_value","debitCount","creditCount","tokens","forEach","token","qty","debit1Code","code","debit1Qty","debit1Value","debit2Code","debit2Qty","debit2Value","credit1Code","credit1Qty","credit1Value","credit2Code","credit2Qty","credit2Value","historyItemSchema","model","fields","type","blkid","window","g","currencyCode","cur_code","columnWidths","field","title","width","format","template","filterable","multi","search","aggregates","footerTemplate","e","text","target","trim","apiUrl","history","map","grid","textboxAccessKey","yearTextbox","monthTextbox","GetLocalStorage","key","defaulValue","val","localStorage","getItem","JSON","parse","$","document","on","kendoGrid","toolbar","dataSource","data","schema","aggregate","columns","historyColumns","sortable","resizable","filterMenuInit","startsWith","container","addClass","excel","fileName","allPages","excelExport","sheet","workbook","sheets","rowIndex","rows","row","cellIndex","cells","columnResize","column","push","setItem","stringify","thead","kendoTooltip","filter","content","historyTooltip","kendoTextBox","kendoNumericTextBox","decimals","min","max","kendoButton","icon","click","accKey","alert","fetchConfigData","result","year","month","url","fetchHistoryData","each","index","element","_init","init","resize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","globalThis","this","Function"],"sourceRoot":""}